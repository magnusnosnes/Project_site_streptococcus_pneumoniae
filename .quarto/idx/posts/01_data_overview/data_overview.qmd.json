{"title":"An overview of the data","markdown":{"yaml":{"title":"An overview of the data","editor":"visual","date":"2022-11-04","image":"Samples.png","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}},"execute":{"echo":false,"message":false}},"headingText":"The data originated from the following studies:","containsRefs":false,"markdown":"\n\n\n```{r remedy001, include=F}\nlibrary(readxl)\nlibrary(ggplot2)\nlibrary(lubridate)\nsetwd(\"/Users/magnusnygardosnes/Dropbox/Postdoc_pneumococcus/00_Collection_overview\")\nSA = readxl::read_xlsx(\"GPSC_South_Africa.xlsx\")\nMaela = readxl::read_xls(\"maela_PLOS_Genetics_PEN.xls\")\nNorway_routine = read_xlsx(\"/Users/magnusnygardosnes/Dropbox/Postdoc_pneumococcus/00_Collection_overview/Nor2018-2022_metadata.xlsx\")\nNorway_historic = readxl::read_xlsx(\"Pneumoprosjekt_NMBU_FHI_nummerert_eksportert.xlsx\")\nUSA = readxl::read_xlsx(\"USA_12864_2017_4017_MOESM1_ESM.xlsx\")\n\n#studies = list(Maela=\"10.1371/journal.pgen.1004547\",USA=\"\")\n\n\n#South Africa is done.\nSA_for_study = SA\nSA_for_study = SA_for_study[,c(\"ERR\",\"Year\",\"Country\",\"Penicillin\")]\n\n\n#1. Currently missing data on year of isolation.\n#2. Need to reorder columns\n#3. Need to handle MIC values above and below the thresholds.\n\nMaela_for_study = Maela\nMaela_for_study = Maela_for_study[,c(\"ENA_accession_no\", \"penicillin_MIC(µg/mL)\")]\nMaela_for_study$Country = rep(\"Maela\", nrow(Maela_for_study))\n#Extra info Maela\n# Use the gsub function to replace \"<0.06\" with \"0.06\" in the count column\n# Check how to they handled <0.06 in the original study. \nMaela_for_study$`penicillin_MIC(µg/mL)`<- gsub(\"<0.06\", \"0.06\", Maela_for_study$`penicillin_MIC(µg/mL)`)\n\nmaela_extra = read_xlsx(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/pneumo_project_Maela/41588_2014_BFng2895_MOESM61_ESM.xlsx\")\nmatch_indexes = unlist(lapply(Maela_for_study$ENA_accession_no,\n                              FUN = function(x) which(x == maela_extra$ENA_accession_no)))\nMaela_for_study$Year = x=decimal_date(as.Date(maela_extra$date_of_collection[match_indexes]))\nMaela_for_study = Maela_for_study[,c(1,4,3,2)]\nMaela_for_study$`penicillin_MIC(µg/mL)`\n\n#The USA\n#Was used to train a pbp model in\n# https://doi.org/10.1186/s12864-017-4017-7\n#But originally comes from these two studies\n# https://doi.org/10.1128/mBio.00756-16\n# https://doi.org/10.1016/j.cmi.2015.08.027\n#1. Currently missing data on year of isolation.\n#2. Need to reorder columns\n#3. Need to handle MIC values above and below the thresholds.\n#Notes: They used multiple platforms: HiSeq and MiSeq.\n#THe metadata of USA is also way too long, must remove the fasta files not used. \nUSA_for_study = USA\nUSA_for_study = USA_for_study[,c(\"Biosample Accession\",\"PEN\")]\nUSA_for_study$Country = rep(\"USA\", nrow(USA_for_study))\n#Need additional metadata for dates\nusa_extra1 = read_xlsx(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/pneumo_project_USA_ERR/Extra_1_USA.xlsx\",skip=1,col_names=c(\"CDC_lab_id\",\"Accession\",\"Year\"))\nusa_extra1$Accession\nindexes_1 = unlist(lapply(USA_for_study$`Biosample Accession`, FUN=\n                            function(x) ifelse(x %in% usa_extra1$Accession, which(x==usa_extra1$Accession),NA)))\nUSA_for_study$Year = usa_extra1$Year[indexes_1]\nUSA_for_study = USA_for_study[,c(\"Biosample Accession\",\"Year\", \"Country\", \"PEN\")]\n#Missing years for the remaining accessions\n#Paste this in terminal\n#esearch -db bioproject -query \"ERR505998\"\n#USA$`Biosample Accession` #Extract collection date for each biosample accesssion number\n#esearch -db pubmed -query \"ERR586469 [PACC]\"\n#Pubmed stores collection date as:\n#<TAG>collection date</TAG>\n#<VALUE>2009</VALUE>\n\n#Massachusetts\n#Also check what they did in the study. \n# < 0.01 -> 0.008 <.016 -> 0.008 <=0.03 -> 0.03 <0.016 -> 0.008  <0.03 -> 0.015\n# >4 and >4.00 set to 4.\nMIC_translate <- c(\n  \"< 0.01\" = 0.008,\n  \"<.016\" = 0.008,\n  \"<=0.03\" = 0.03,\n  \"<0.016\" = 0.008,\n  \"<0.03\" = 0.015,\n  \">4\" = 4,\n  \">4.00\" = 4\n)\n\nMassachusetts = read_xlsx(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/pneumo_project_Massachusetts/Massachusetts_nature_genetics.xlsx\")\nMassachusetts_for_study = Massachusetts[,c(\"Accession\",\"Year of Isolation\",\"Benzylpenicillin MIC (μg/mL)\")]\nMassachusetts_for_study$Country = rep(\"Massachusetts\", nrow(Massachusetts))\nMassachusetts_for_study = Massachusetts_for_study[,c(1,2,4,3)]\n# Replace the values in the Benzylpenicillin MIC (μg/mL) column\n# with the corresponding values from the MIC_translate vector\n# using the indexes_to_replace vector to identify which values to replace\nindexes_to_replace = which(Massachusetts_for_study$`Benzylpenicillin MIC (μg/mL)` %in% names(MIC_translate))\nMassachusetts_for_study$`Benzylpenicillin MIC (μg/mL)`[indexes_to_replace] =\n  MIC_translate[Massachusetts_for_study$`Benzylpenicillin MIC (μg/mL)`[indexes_to_replace]]\n# table(Massachusetts_for_study$`Benzylpenicillin MIC (μg/mL)`)\n\n#Norway historic.\n#1. Need a translation table for all the PG_MIC values\n# 16(24) is probably 16\n# 2 (3) is probably 2\n# Skipping historic for contionus analysis - might need later (R,I,S). \nMIC_translate <- c(\n\"16 (24)\" = 16,\n\"2 (3)\" = 2,\n\"<0,016\" = 0.016,\n\"0,008_mg/L_\" = 0.008,\n\"0,016\" = 0.016,\n\"0,016_mg/L_\" = 0.016,\n\"0,032\" = 0.032,\n\"0,032_mg/L_\" = 0.032,\n\"0,064\" = 0.064,\n\"0,064_mg/L_\" = 0.064,\n\"0,125\" = 0.125,\n\"0,125_mg/L_\" = 0.125,\n\"0,19_mg/L_\" = 0.19,\n\"0,25\" = 0.25,\n\"0,25_mg/L_\" = 0.25,\n\"0,5_mg/L_\" = 0.5,\n\"1_mg/L_\" = 1,\n\"16(24)\" = 16,\n\"2_mg/L_\" = 2,\n\"2(3)\" = 2,\n\"4_mg/L_\" = 4,\n\"Intermediær_MIC:_0,125\" = 0.125,\n\"Intermediær_MIC:_0,25\" = 0.25,\n\"Intermediær_MIC:_0,5\" = 0.5,\n\"Intermediær_MIC:_1\" = 1,\n\"Intermediær_MIC:_2\" = 2,\n\"nd\" = NA,\n\"Resistent_MIC:_4\" = 4,\n\"Resistent_MIC:_8\" = 8,\n\"Sensitiv_MIC:_0,008\" = 0.008,\n\"Sensitiv_MIC:_0,016\" = 0.016,\n\"Sensitiv_MIC:_0,032\" = 0.032,\n\"Sensitiv_MIC:_0,064\" = 0.064)\n\nMIC_translate_lappe = c(\n  \"16 (24)\" = 16,\n\"2 (3)\" = 2)\n\nHistoric_for_study = Norway_historic[,c(\"Fasta_navn\",\"ÅR\",\"PG_MIC\",\"PG_Lappediff\")]\nHistoric_for_study$Country=rep(\"Norway_historic\",nrow(Historic_for_study))\nHistoric_for_study = Historic_for_study[,c(1,2,5,3,4)]\n#Find weird names\nindexes_to_replace = which(Historic_for_study$PG_MIC %in% names(MIC_translate))\n#Translate them to numeric values.\nHistoric_for_study$PG_MIC[indexes_to_replace] =\n  MIC_translate[Historic_for_study$PG_MIC[indexes_to_replace]]\nHistoric_for_study$PG_MIC%in% names(MIC_translate)\n\n\n#Norway routine.\n#1. Lots of missing data.\nRoutine_for_study = Norway_routine\nRoutine_for_study = Routine_for_study[,c(\"Fasta_file\",\"Year\",\"PenG_MIC\")]\nRoutine_for_study$Country=rep(\"Norway_routine\",nrow(Routine_for_study))\nRoutine_for_study = Routine_for_study[,c(1,2,4,3)]\ntable(Routine_for_study$PenG_MIC) #Missing data for 556 isolates\n\n# Combined dataset.\n# Requires data to be ordered by isolate name (fasta identifier). \n# Rebecca suggsted that we also include the Ast_penicillin column as these affect the MIC \ntotal_data = rbind(as.matrix(SA_for_study),\n                   as.matrix(Maela_for_study),\n                   as.matrix(USA_for_study),\n                   as.matrix(Massachusetts_for_study),\n                   as.matrix(Routine_for_study),\n                   as.matrix(Historic_for_study[,1:4]))\ncolnames(total_data)=c(\"fasta_name\",\"Date\",\"Country\", \"Penicillin_MIC\")\n#We are missing data on 876 + 16 isolates\ntotal_data=as.data.frame(total_data)\n\n# Remove extra metadata\nlibrary(stringr)\n# We removed quite a few isolates from filtering, and metadata spanned more than the isolates we used.\n# 1. define identifier in matching format for the isolates we kept\nidentifier_in_filtered_collection = read.csv(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Om_samlingen/files_in_filtered_collection.txt\", sep=\"\\t\",header=F)\nsample_ids = str_replace(identifier_in_filtered_collection$V1,\".fasta\", \"\")\n# 2. define identifier in matching format for metadata\nmetadata_ids = str_replace(total_data$fasta_name, \".fasta\",\"\")\n# 3. match samples ids to the metadata\nmatch_in_row = unlist(lapply(sample_ids, FUN = function(x) which(x == metadata_ids)))\nwrite.table(sample_ids[which((sample_ids %in% metadata_ids)==FALSE)],file = \"/Users/magnusnygardosnes/Dropbox/Postdoc_pneumococcus/00_Collection_overview/remove_historic_with_missing_metadata.txt\", row.names = F, quote=F,col.names = F)\n\n#Wrong metadata among these matches\n#total_data[10747:10751,]\n#total_data[10568:10572,]\n\n# 4. retain only indexes that matched in metadata.\ntotal_data = total_data[match_in_row,]\nwrite.table(total_data,\"~/Dropbox/Postdoc_pneumococcus/00_Collection_overview/total_metadata_processed_and_combined.csv\")\n\n```\n\n## Project summary\n\nThe goal of this project is to determine mutations and factors that are involved in penicillin resistance. We have collected a data set with isolates that are susceptible, intermediate resistant and resistant to Penicillin G. We included isolates that have been analysed in previous studies in addition to new isolates from routine sequencing in Norway. In addition, we sequenced historic isolates that have been stored at the Norwegian Institute of public health. In total the collection consists of 9316 genomes, with sampling dates and antibiotic resistance profiles summarized below.\n\n```{r}\nlibrary(shiny)\nlibrary(plotly)\nlibrary(wesanderson)\n# Define a function that takes a data frame and a country name\n# as input, filters the data based on the country name, and\n# creates a stacked bar plot of the data\n#\nplot_data_by_country <- function(data, country) {\n  \n  #Debug\n  #data=total_data; country=\"South Africa\";\n  \n  # Filter the data based on the country name\n  data_subset <- data[data$Country == country, ]\n  \n  # Convert the Date column to numeric values\n  data_subset$Date = as.numeric(data_subset$Date)\n  \n  # Find the minimum and maximum values in the Date column and expand axes +-1\n  mind = min(data_subset$Date,na.rm=T) - 2\n  maxd = max(data_subset$Date,na.rm=T) + 1\n  \n  # Create a sequence of breaks for the x-axis\n  breaks = seq(mind, maxd, 1)\n  \n  # Create the colors vector\n  values = c(\"#0074D9\", \"#FF4136\", \"#2ECC40\", \"#FF851B\", \"#7FDBFF\", \"#B10DC9\")\n\n  # Set the names of the vector to the country names\n  names(values) = c(\"Maela\", \"Massachusetts\", \"Norway_historic\",\"Norway_routine\", \"South Africa\", \"USA\")\n  as.character(values[country])\n  # Print the vector\n  \n  # Create a stacked bar plot of the Date column\n  g1 = ggplot(data_subset, aes(x = Date,fill=as.character(values[country]))) +\n    geom_bar(position = \"stack\", aes(x = Date)) +\n    theme_bw() +\n    stat_bin(aes(x = Date), breaks = breaks) +\n    scale_fill_manual(values = as.character(values[country]))+\n    scale_x_binned(breaks = breaks, limits = c(mind, maxd), expand = c(0, 0))+ theme(axis.text.x = element_text(angle = 60, hjust = 1), legend.position=\"none\")\n  \n  # Under the ggplot hood:\n  under_the_hood = ggplot_build(g1)\n  \n  # Find the maximum count of observations in each bin\n  max_y = max(under_the_hood$data[[1]]$count)\n  \n  # Set the y-axis limits to be 20% above the maximum count\n  g1 = g1 + scale_y_continuous(expand = c(0, 0), limits = c(0, max_y * 1.2))\n  \n  # Return the plot\n  g1\n}\n\nplot_data_by_country_interactive <- function(data, country) {\n  # Create the ggplot bar plot\n  ggplot_plot <- plot_data_by_country(data, country)\n  \n  # Convert the ggplot plot to an interactive plotly plot\n  ggplotly(ggplot_plot)\n}\n\n\n# Define a function that takes a data frame and a country name\n# as input, filters the data based on the country name, and\n# creates a stacked bar plot of the MIC data\n#>0.06 = \"non susceptible\"\n# >2 = \"resistant\"\nplot_MIC_by_country <- function(data, country) {\n  #Debug\n  #data=total_data; country=\"Norway_historic\";\n  \n  # Filter the data based on the country name\n  data_subset <- data[data$Country == country, ]\n  \n  #\n  data_subset$Penicillin_MIC <- as.numeric(data_subset$Penicillin_MIC)\n  t1 = table(data_subset$Penicillin_MIC)\n  t1 = as.data.frame(t1)\n  colnames(t1)=c(\"Penicillin_MIC\", \"Counts\")\n  \n  t1$Penicillin_MIC <- as.numeric(as.character(t1$Penicillin_MIC))\n  \n  # Sort the values\n  t1 <- t1[order(t1$Penicillin_MIC), ]\n  \n  #Define color groups\n  t1$group <- ifelse(t1$Penicillin_MIC < 0.02, \"Susceptible\",\n                   ifelse(t1$Penicillin_MIC < 2, \"Non-susceptible\", \"Resistant\"))\n  # Convert the numeric values back to a factor variable\n  t1$Penicillin_MIC <- factor(t1$Penicillin_MIC)\n  \n  g1 = ggplot(t1, aes(x = Penicillin_MIC, y = Counts,fill=group)) +\n  geom_col() +\n  theme_bw()+scale_fill_manual(values = c(\"Susceptible\" = \"blue\", \"Non-susceptible\" = \"red\", \"Resistant\" = \"dark red\"),\n                               labels=c(\"Susceptible\",\"Non-susceptible\",\"Resistant\"))+xlab(\"Penicilling G MIC\")+\n    labs(fill = \"Resistance category\")+xlab(\"MIC\")+ylab(\"Number of isolates\")+\n    theme(legend.position = \"none\", axis.text.x = element_text(angle = 60, hjust = 1))\n  g1\n}\n\nplot_MIC_by_country_interactive <- function(data, country) {\n  # Create the ggplot bar plot\n  ggplot_plot <- plot_MIC_by_country(data, country)\n  \n  # Convert the ggplot plot to an interactive plotly plot\n  ggplotly(ggplot_plot) %>%\n    layout(legend = list(orientation = \"h\", x = 0.25, y =-1))\n}\n\nplot_years_stacked_country <- function(data) {\n  \n  # Filter the data based on the country name\n  data_subset <- data\n  \n  # Convert the Date column to numeric values\n  data_subset$Date = as.numeric(data_subset$Date)\n  \n  # Find the minimum and maximum values in the Date column and expand axes +-1\n  mind = min(data_subset$Date,na.rm=T) - 2\n  maxd = max(data_subset$Date,na.rm=T) + 1\n  \n  # Create a sequence of breaks for the x-axis\n  breaks = seq(mind, maxd, 1)\n  # Create a stacked bar plot of the Date column\n  g1 = ggplot(data_subset, aes(x = Date,fill=Country)) +\n    geom_bar(position = \"stack\", aes(x = Date)) +\n    theme_bw() +\n    stat_bin(aes(x = Date), breaks = breaks) +\n    scale_fill_manual(values=c(\"#0074D9\", \"#FF4136\", \"#2ECC40\", \"#FF851B\", \"#7FDBFF\", \"#B10DC9\"),\n                    labels=c(\"Maela\", \"Massachusetts\", \"Norway historic\", \"Norway routine\", \"South Africa\", \"USA\"))+\n    scale_x_binned(breaks = breaks, limits = c(mind, maxd), expand = c(0, 0))+ theme(axis.text.x = element_text(angle = 60, hjust = 1), legend.position=\"top\")\n  \n  # Under the ggplot hood:\n  under_the_hood = ggplot_build(g1)\n  \n  # Find the maximum count of observations in each bin\n  max_y = max(under_the_hood$data[[1]]$count)\n  \n  # Set the y-axis limits to be 20% above the maximum count\n  g1 = g1 + scale_y_continuous(expand = c(0, 0), limits = c(0, 2000))\n  \n  # Return the plot\n  g1\n}\n\n##\n# plot_data_by_country(total_data, \"Norway_historic\")\n# plot_data_by_country(total_data, \"Norway_routine\")\n# plot_data_by_country(total_data, \"Maela\")\n# plot_data_by_country(total_data, \"South Africa\")\n# plot_data_by_country(total_data, \"Massachusetts\")\n# plot_data_by_country(total_data, \"USA\")\n\n\n\n```\n\n\n## Collection dates all countries\n\n```{r}\n\nplot_years_stacked_country(total_data)\n\n```\n\n## Collection dates individual countries\n::: {.panel-tabset style=\"width:100%\"}\n\n\n## Norway routine\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"Norway_routine\")\n```\n\n## Norway historic\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"Norway_historic\")\n```\n\n## Maela\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"Maela\")\n```\n\n## South Africa\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"South Africa\")\n```\n\n## Massachusetts\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"Massachusetts\")\n```\n\n## The USA\n\n```{r}\nplot_data_by_country_interactive(total_data, country = \"USA\")\n```\n\n:::\n\n\n\n## MIC values individual countries\n\n::: {.panel-tabset style=\"width:100%\"}\n\n\n## Norway historic\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"Norway_historic\")\n```\n\n## Norway routine\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"Norway_routine\")\n```\n\n## Maela\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"Maela\")\n```\n\n\n## South Africa\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"South Africa\")\n```\n\n\n## Massachusetts\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"Massachusetts\")\n```\n\n## The USA\n\n```{r}\nplot_MIC_by_country_interactive(total_data, \"USA\")\n```\n\n:::\n\n\n![](legendMIC.png){.figure .align-center}\n\n<!-- ### Isolates from Norway -->\n\n<!-- From Norway we included historic isolates and isolates from routine sequencing. -->\n\n<!-- 1142 isolates historic isolates: -->\n\n<!-- ```{r} -->\n\n<!-- #Test -->\n\n<!-- labs = seq(1980,2020,1) -->\n\n<!-- labs= rep(\"\", length(labs)) -->\n\n<!-- labs[seq(1,length(labs),5)]=seq(1980,2020,5) -->\n\n<!-- ggplot(total_data,aes(x=ÅR))+ -->\n\n<!--   geom_bar(position=\"stack\",aes(x=ÅR))+ -->\n\n<!--   theme_bw()+scale_x_binned(breaks=seq(1980,2020,1),limits=c(1980,2020), expand=c(0,0),labels =labs)+ -->\n\n<!--   scale_y_continuous(expand=c(0,0),limits=c(0,60)) -->\n\n<!-- ##GGplot is useless for piecharts. -->\n\n<!-- pie(table(Historic_for_study$PG_MIC), cex=0.7) -->\n\n<!-- pie(table(Historic_for_study$PG_Lappediff), cex=0.7) -->\n\n<!-- ``` -->\n\n<!-- 1312 isolates from routine surveillance: -->\n\n<!-- ```{r } -->\n\n<!-- library(ggplot2) -->\n\n<!-- #Test -->\n\n<!-- ggplot(Routine_for_study,aes(x=Year))+ -->\n\n<!--   geom_bar(position=\"stack\",aes(x=Year))+ -->\n\n<!--   theme_bw()+scale_x_binned(breaks=seq(2017,2022,1),limits=c(2017,2022), expand=c(0,0))+ -->\n\n<!--   scale_y_continuous(expand=c(0,0),limits=c(0,500)) -->\n\n<!-- ##GGplot is useless for piecharts. -->\n\n<!-- pie(table(Routine_for_study$PenG_MIC), cex=0.7) -->\n\n<!-- ``` -->\n\n<!-- ### Isolates from South Africa  -->\n\n<!-- 1569 isolates from South Africa -->\n\n<!-- ```{r } -->\n\n<!-- library(ggplot2) -->\n\n<!-- #Test -->\n\n<!-- ggplot(SA_for_study,aes(x=Year))+ -->\n\n<!--   geom_bar(position=\"stack\",aes(x=Year))+ -->\n\n<!--   theme_bw()+scale_x_binned(breaks=seq(2003,2015,1),limits=c(2003,2015), expand=c(0,0))+ -->\n\n<!--   scale_y_continuous(expand=c(0,0),limits=c(0,400)) -->\n\n<!-- ##GGplot is useless for piecharts. -->\n\n<!-- pie(table(SA_for_study$Penicillin), cex=0.5) -->\n\n<!-- ``` -->\n\n<!-- ### Isolates from the United States -->\n\n<!-- 1595 isolates from the United states -->\n\n<!-- ```{r} -->\n\n<!-- library(ggplot2) -->\n\n<!-- #Test -->\n\n<!-- ggplot(USA_for_study,aes(x=Year))+ -->\n\n<!--   geom_bar(stat=\"count\",width = 1)+ -->\n\n<!--   theme_bw() -->\n\n<!-- ##GGplot is useless for piecharts. -->\n\n<!-- pie(table(USA_for_study$PEN), cex=0.5) -->\n\n<!-- ``` -->\n\n<!-- ### Isolates from the Massachusetts -->\n\n<!-- 616 isolates from Massachusetts  -->\n\n<!-- ```{r} -->\n\n<!-- library(ggplot2) -->\n\n<!-- #Test -->\n\n<!-- ggplot(Massachusetts_for_study,aes(x=`Year of Isolation`))+ -->\n\n<!--   geom_bar(position=\"stack\",aes(x=`Year of Isolation`))+ -->\n\n<!--   theme_bw()+scale_x_binned(breaks=seq(2000,2010,1),limits=c(2000,2010), expand=c(0,0))+ -->\n\n<!--   scale_y_continuous(expand=c(0,0),limits=c(0,400)) -->\n\n<!-- ##GGplot is useless for piecharts. -->\n\n<!-- pie(table(Massachusetts_for_study$`Benzylpenicillin MIC (μg/mL)`), cex=0.5) -->\n\n<!-- ``` -->\n\n<!-- ## Total collection -->\n\n<!-- ```{r} -->\n\n<!-- color_mapping_locations = c(\"Maela\"=\"#FF7F00\", \"Massachusetts\"=\"#A6CEE3\", \"Norway_historic\"=\"#1F78B4\", -->\n\n<!--                             \"Norway_routine\"=\"#B2DF8A\",\"Africa\"=\"#33A02C\",\"USA\"=\"#FB9A99\",\"nd\"=\"black\") -->\n\n<!-- labs = seq(1980,2025,1) -->\n\n<!-- labs= rep(\"\", length(labs)) -->\n\n<!-- labs[seq(1,length(labs),5)]=seq(1980,2025,5) -->\n\n<!-- main_plot2 = ggplot(data = total_data) + -->\n\n<!--   geom_bar(position=\"stack\",aes(x=as.numeric(Date), fill=Country)) +  -->\n\n<!--   scale_fill_manual(\"location\", values=color_mapping_locations) + -->\n\n<!--   theme_bw()+xlab(\"\")+ylab(\"Number of sequences\")+theme(legend.position = \"top\") +  -->\n\n<!--   scale_x_binned(breaks=seq(1980,2025,1),limits=c(1980,2025), expand=c(0,0),labels =labs)+xlab(\"Collection date\") -->\n\n<!-- main_plot2 -->\n\n<!-- ``` -->\n\n<!--  <!-- ![Intergalactic train](intergalactic4.png \"Test\") -->\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"data_overview.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"lux","title":"An overview of the data","date":"2022-11-04","image":"Samples.png","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}}},"extensions":{"book":{"multiFile":true}}}}}