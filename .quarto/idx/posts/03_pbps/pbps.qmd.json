{"title":"Penicillin binding proteins","markdown":{"yaml":{"title":"Penicillin binding proteins","date":"2022-12-14","editor":"visual","image":"cover.jpg","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}},"execute":{"echo":false,"message":false},"format":{"html":{"fig-width":8,"fig-height":12,"page-layout":"full"}}},"headingText":"Specify the names of the files to read","containsRefs":false,"markdown":"\n\nPBPs are a type of protein found in bacteria that bind to penicillin, a type of antibiotic. PBPs play a key role in the synthesis of the bacterial cell wall, and when they bind to penicillin, they can interfere with this process. As a result, the growth and division of the bacterial cells can be impaired, making the antibiotic effective at killing or inhibiting the growth of the bacteria. It is important to note that some bacteria can develop resistance to antibiotics by producing PBPs that are resistant to the effects of the antibiotic. In these cases, the antibiotic may not be effective at killing or inhibiting the growth of the bacteria, making it important to use a different type of antibiotic or to use a combination of antibiotics to effectively treat the infection.\n\nThe PBPs presented in this document were determined by running [Pathogenwatch](https://pathogen.watch/), which uses a machine learning procedure PBP typing scheme . The visualization provides a representation of the distribution and abundance of the different types of PBPs in our collection.\n\n```{r remedy001}\nfilenames <- c(\"pbps_USA.csv\", \"pbps_maela.csv\", \"pbps_massachusetts.csv\", \n               \"pbps_norway_historic.csv\", \"pbps_norway_routine.csv\", \"pbps_south_africa.csv\")\nfilenames = paste0(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/03_PBPs/\", filenames)\n\n# Read each file and store the resulting data frame in a list\ndata_frames <- lapply(filenames, read.csv)\n\nn_in_study = unlist(lapply(data_frames, nrow))\ndataset = rep(c(\"USA\", \"maela\", \"massachusetts\", \"norway_historic\", \"norway_routine\", \"south_africa\"), n_in_study)\n# Use rbind to combine the data frames in the list into a single data frame\ncombined_data <- do.call(rbind, data_frames)\ncombined_data$dataset = dataset\n\nwrite.table(combined_data,\"~/Dropbox/Postdoc_pneumococcus/00_Collection_overview/PBPs.csv\")\n\n\n#   ____________________________________________________________________________\n#   prompt                                                                  ####\n# My dataset looks like this:\n# \n#   PBP1a PBP2b PBP2x dataset\n# 1    42    42     8     USA\n# 2     1     0     6     USA\n# 3     2     4     0     USA\n# \n# I want to make a function that plots barplots of the PBP1a, PBP2b, and the PBP2x columns in the combined dataset. \n# Use ggplot to do following things: \n# Define a barplot function called barplot_pbps_in_dataset.\n# Make the barplot function select the rows of the combined data that corresponding to an user input value (string).\n# Make a barplot of PBP1a using ggplot on the the selected rows. Set the title of the plot to PBP1a.\n# Make a barplot of PBP2b using the selected rows. Set the title of the plot to PBP2b.\n# Make a barplot of PBP2x using the selected rows. Set the title of the plot to PBP2x.\n# Arrange the barplots in 3 rows and 1 column, and return the plot to the user.\n# \n#  [1] \"42\"  \"1\"   \"2\"   \"45\"  \"0\"   \"NF\" \"NEW\" \"208\" \"141\" \"111\"\n# R-programming language. \n# Reorder this factor variable by dplyr and sort by the sorting by numeric values. Make any non-numeric values appear last. turn it back into a factor\n# \n\n#   ____________________________________________________________________________\n#   End prompt                                                              ####\n\n\nlibrary(ggplot2)\nlibrary(gridExtra)\nlibrary(dplyr)\n\nreorder_and_sort_factor = function(data,column) {\n  \n  #Count and reorder by counts\n  pbp_tab = table(data[,column])\n  pbp_tab = sort(pbp_tab, decreasing=T)\n  #Store the non_numeric values\n  extra = pbp_tab[names(pbp_tab)%in%c(\"NF\", \"NEW\")]\n  #Remove the non-numeric values\n  pbp_tab = pbp_tab[(names(pbp_tab)%in%c(\"NF\", \"NEW\"))==F]\n  pbp_tab = c(pbp_tab,extra)\n  pbp_tab  = as.data.frame(pbp_tab)\n  pbp_tab$type=rownames(pbp_tab)\n  pbp_tab$type = factor(pbp_tab$type, levels=pbp_tab$type)\n  pbp_tab$counts = pbp_tab$.\n  rownames(pbp_tab)=NULL\n  pbp_tab\n}\n\n\nbarplot_pbps_in_dataset <- function(data, dataset,plot=F){\n  #Debug:\n  #data = combined_data; dataset=\"USA\";\n  \n  # Select rows that correspond to the given country\n  selected_data <- data[data$dataset == dataset,]\n  \n  #Count and reorder by counts\n  pbp1a_tab = reorder_and_sort_factor(selected_data,\"PBP1a\")\n  pbp2b_tab = reorder_and_sort_factor(selected_data,\"PBP2b\")\n  pbp2x_tab = reorder_and_sort_factor(selected_data,\"PBP2x\")\n  \n  # Create barplots for PBP1a, PBP2b, and PBP2x\n  pbp1a <- ggplot(pbp1a_tab, aes(x=type,y=pbp_tab)) +\n    geom_bar(stat = \"identity\")+theme_bw()+xlab(\"PBP1a type\")+theme(axis.text.x = element_text(angle = 90))+ylab(\"PBP1a\")\n  \n  pbp2b <- ggplot(pbp2b_tab, aes(x=type,y=pbp_tab)) +\n    geom_bar(stat = \"identity\") +theme_bw()+xlab(\"PBP1a type\")+theme(axis.text.x = element_text(angle = 90))+ylab(\"PBP2b\")\n  \n  pbp2x <- ggplot(pbp2x_tab, aes(x=type,y=pbp_tab)) +\n    geom_bar(stat = \"identity\") +theme_bw()+xlab(\"PBP1a type\")+theme(axis.text.x = element_text(angle = 90))+ylab(\"PBP2x\")\n  \n  # Arrange plots in 3 rows and 1 column\n  if(plot==T){\n    grid.arrange(pbp1a, pbp2b, pbp2x, nrow = 3)  \n  }\n  return(list(\"pbp1a\"=pbp1a,\"pbp2b\"=pbp2b,\"pbp2x\"=pbp2x))\n}\n\nlibrary(plotly)\n\ninteractive_pbps = function(output_barplots) {\n  #plotly::ggplotly(output_barplots$pbp1a)\n  #output_barplots = barplot_pbps_in_dataset(combined_data,\"norway_routine\")\n  plots = subplot(output_barplots$pbp1a, output_barplots$pbp2b, output_barplots$pbp2x, nrows = 3, titleY = TRUE)\n  ggplotly(plots,layout(autosize = F, width = 500, height = 500))\n}\nlibrary(shiny)\n\nmake_plots = function(total_data, dataset) {\n  c1 = barplot_pbps_in_dataset(total_data,dataset)\n  interactive_pbps(c1)\n}\n\n```\n\n::: {.panel-tabset style=\"width:135%\"}\n## Norway Routine\n\n```{r}\nmake_plots(combined_data,\"norway_routine\")\n```\n\n## Norway historic\n\n```{r}\nmake_plots(combined_data,\"norway_historic\")\n```\n\n## Maela\n\n```{r}\nmake_plots(combined_data,\"maela\")\n```\n\n## South Africa\n\n```{r}\nmake_plots(combined_data,\"south_africa\")\n```\n\n## Massachusetts\n\n```{r}\nmake_plots(combined_data,\"massachusetts\")\n```\n\n## USA\n\n```{r}\nmake_plots(combined_data,\"USA\")\n```\n:::\n"},"formats":{"html":{"execute":{"fig-width":8,"fig-height":12,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"pbps.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"lux","title":"Penicillin binding proteins","date":"2022-12-14","image":"cover.jpg","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}},"page-layout":"full"},"extensions":{"book":{"multiFile":true}}}}}