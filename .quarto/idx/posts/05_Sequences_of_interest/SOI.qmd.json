{"title":"Sequences of interest","markdown":{"yaml":{"title":"Sequences of interest","date":"2023-01-11","editor":"visual","image":"khpB.png","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}},"execute":{"echo":false,"message":false,"cache":false},"format":{"html":{"fig-width":10,"fig-height":10,"toc":true,"toc-location":"left"}}},"headingText":"Overview","containsRefs":false,"markdown":"\n\n\nIn this analysis, we investigate specific genes of interest identified by our colleagues at NMBU. One protein of particular interest is KhpB, which has been found to have a correlation with pbp2b, a protein is known to play a role in increasing MICS. It was found that when pbp2b is transferred to a strain, EloR acquires a 50 bp deletion.\n\nTo understand the impact of this deletion on MIC, we created a BLAST (Basic Local Alignment Search Tool) database for EloR and searched all of our isolates against it. Next we extracted the matches and the gene length of the match in the respective assemblies. A shorter gene length would indicate the presence of the 50 bp deletion or other modifications to the protein.\n\n## KhpB sequence length and MIC\n\n```{r }\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(data.table)\n\nblast_eloR_full <- read.table(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/blast_output_eloR_full_reverse.txt\", header=TRUE, sep=\"\\t\", comment.char=\"#\")\n\n# Add column names\ncolnames(blast_eloR_full) <- c(\"query\", \"subject\", \"identity\", \"alignment_length\", \"mismatches\", \"gap_opens\", \"q_start\", \"q_end\", \"s_start\", \"s_end\", \"evalue\", \"bit_score\")\n\n\n# Extract contig number\nblast_eloR_full$contig_number<- gsub(\"^.*?_(\\\\d+)_.*\", \"\\\\1\", blast_eloR_full$query)\n\n# Extract query_id\nblast_eloR_full$query_id <- gsub(\"^(.*?)_.*\", \"\\\\1\", blast_eloR_full$query)\n\n\n# Read fasta file locations\nfasta_files = read.table(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Om_samlingen/input.txt\")\n\n# read phenotype\npenicillin = read.table(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/06_Pyseer/phenotype.tsv\", header=T)\n\n# Replace file ending \".fasta\" with \".gff3\" from fasta_files\ngff_files = gsub(\"\\\\.fasta$\", \".gff3\", fasta_files$V1)\n\ngff_files_identifiers = gsub(\".gff3\", \"\", gff_files); gff_files_identifiers = gsub(\".*/\", \"\", gff_files_identifiers)\n\n# Find the index of the query_id in the table of gff files\ninds = unlist(lapply(blast_eloR_full$query_id, function(x) which(x==gff_files_identifiers)))\n\n# Extract the file locations\nblast_eloR_full$file_location = gff_files[inds]\n\n#There is something weird among the names\n    \n\n# I am trying to write a script to find overlaps between the blast search and annotations in a gff3 file. \n# Can you help me write the code. Base it on the pseudocode I wrote below and fill out the lines.\n\n# Loop over all lines in the blast table.\n# For each line:\n# Open the gff3 file.\n# Find the overlap between q_start, q_end\n# Extract the name of the gene \n# Go to the contig position\n# Extract the found start and end positions from that contig\n# Calculate the length of the gene\n\n#library(tidyverse)\n\n# Load the blast table\nblast_table <- blast_eloR_full\nresults = matrix(nrow = nrow(blast_table),ncol = 6)\ncolnames(results)= c(\"Query\", \"Subject\", \"Identity\", \"Alignment length:\", \"Gene name:\", \"Gene length:\")\n\n#Timeconsuming section\n#Loop over all lines in the blast table\n# \n# for (i in 1:nrow(blast_table)) {\n#   cat(round(i/nrow(blast_table),2)*100,\"%\\r\")\n#   # For each line\n#   blast_line <- blast_table[i,]\n# \n#   # Open the gff3 file\n#   gff3_file = read.delim(blast_line$file_location, header=F, comment.char=\"#\")\n# \n#   colnames(gff3_file) = c(\"seqid\", \"source\", \"type\", \"start\", \"end\", \"score\", \"strand\", \"phase\", \"attributes\")\n# \n#   select_lines = which(gff3_file$seqid == paste0(\"contig_\",blast_line$contig_number))\n# \n#   # Filter for the correct contig:\n#   gff3_file = gff3_file[select_lines,]\n# \n#   #Only use the last TRUE value\n#   line_select_gff3 <- max(which(blast_line$q_start >= gff3_file$start))\n# \n#   # Find the overlap between q_start, q_end\n#   gff3_overlap = gff3_file[line_select_gff3,]\n# \n#   #gff3_overlap <- gff3_file %>% filter(blast_line$q_start >= start  & blast_line$q_end <= end & type!=\"region\")\n# \n# \n# \n#   #DEBUG\n#   #cbind(gff3_file[,c(\"start\",\"end\")],blast_line$q_start >= gff3_file$start, blast_line$q_end <= gff3_file$end)\n#   #gff3_file$start >= blast_line$q_start\n#   #c2 = gff3_file$end <= blast_line$q_end\n# \n# \n#   # Filter for the right contig\n# \n# \n#   # Select correct match\n# \n#   # Print warning if gff3_overlap still has multiple matches.\n#   if(nrow(gff3_overlap) > 1) {\n#     warning(\"Multiple matches found for query\", blast_line$query)\n#   }\n# \n#   # Extract the name of the gene\n#   gene_name <- gff3_overlap$attributes\n# \n#   # Extract the found start and end positions from that contig\n#   gene_start <- gff3_overlap$start\n#   gene_end <- gff3_overlap$end\n# \n#   # Calculate the length of the gene\n#   gene_length <- gene_end - gene_start\n# \n#   # Print the results\n#   # cat(\"Query:\", blast_line$query, \"\\n\")\n#   # cat(\"Subject:\", blast_line$subject, \"\\n\")\n#   # cat(\"Identity:\", blast_line$identity, \"\\n\")\n#   # cat(\"Alignment length:\", blast_line$alignment_length, \"\\n\")\n#   # cat(\"Gene name:\", gene_name, \"\\n\")\n#   # cat(\"Gene length:\", gene_length, \"\\n\\n\")\n#   results[i,] =c(blast_line$query,blast_line$subject, blast_line$identity, as.numeric(blast_line$alignment_length), gene_name, as.numeric(gene_length))\n# }\n\nresults = as.data.frame(results)\n#save(results, file=\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/stored_data/gene_lengths.Rdata\")\nload(file=\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/stored_data/gene_lengths.Rdata\")\n\n# results is a dataframe\n# select rows of results where results$`Gene length:` < 900\n# define identifiers from query\nresults$id = substring(results$Query, 1, as.integer(regexpr(\"_\", results$Query)[1])-1)\n\n# Function to find the index of a sample in the penicillin table\nmatch_indexes = function(x) {\n  #  x is a vector of identifiers\n  ind = which(x==penicillin$samples)\n  # If there is no match, return NA\n  if(length(ind)==0) ind = NA\n  return(ind)\n  \n}\n\n\nresults$MIC =  penicillin$penicillin_G[unlist(lapply(results$id, FUN=match_indexes))]\n\n#Omit missing values\nfiltered_results = na.omit(results)\n\n#Remove gene lengths above 1100\nfiltered_results = filtered_results[which(as.numeric(filtered_results$`Gene length:`)<1100),]\nfiltered_results$`Gene length:` = as.numeric(filtered_results$`Gene length:`)\nfiltered_results$`Alignment length:` = as.numeric(filtered_results$`Alignment length:`)\n\n\n```\n\n```{r}\n#| label: fig-blast_search\n#| fig-cap:  Blast search of assemblies against the full eloR sequence. \n#|   The figure shows the relationship between the gene length and alignment length of the protein KhpB/eloR and the Minimum Inhibitory Concentration (MIC) of the isolates in our database. Panel A displays a scatter plot of the gene length and MIC, with the points plotted in red. Panel B displays a scatter plot of the alignment length and MIC, with the points plotted in blue.\n\n# Create a scatter plot of Gene length vs MIC\np1 = ggplot(data = filtered_results, aes(x = `Gene length:`, y = MIC)) + \n  geom_point(color = \"red\") +\n  #geom_smooth(method = \"lm\", se = FALSE) +\n  #geom_hex(bins = 20, stat = \"hex\", aes(fill = after_stat(density))) +\n  ggtitle(\"Gene length vs MIC\") +\n  xlab(\"Gene length\") +\n  ylab(\"MIC\")+\n  theme_classic()+\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n        axis.title = element_text(size = 14, face = \"bold\"),\n        axis.text = element_text(size = 12))\n\n# Create a scatter plot of Alignment length vs MIC\np2 = ggplot(data = filtered_results, aes(x = `Alignment length:`, y = MIC)) + \n  geom_point(color = \"blue\") +\n  #geom_hex(bins = 20) +\n  #geom_smooth(method = \"lm\", se = FALSE) +\n  ggtitle(\"Alignment length vs MIC\") +\n  xlab(\"Alignment length\") +\n  ylab(\"MIC\")+\n  theme_classic()+\n  theme(plot.title = element_text(size = 18, face = \"bold\"),\n        axis.title = element_text(size = 14, face = \"bold\"),\n        axis.text = element_text(size = 12))\nggarrange(p1, p2, ncol = 1)\n```\n\nAs seen in @fig-blast_search, there is no apparent correlation between the gene length of KhpB and the observed penicillin MIC. In fact, we see that most of the high MIC levels is observed around the normal gene length (approximately 986 base pairs).\n\n```{r}\ntest = unlist(strsplit(results$`Gene name:`, split=\";\"))\n\n# results is a dataframe\n# possbily_broken_elo = filter(results,   as.numeric(results$`Gene length:`) < 950)\n# full_elo = filter(results,   as.numeric(results$`Gene length:`) >  950 & as.numeric(results$`Gene length:`) < 1100)\n# \n# #\n# eloR_broken_indexes = unlist(lapply(possbily_broken_elo$id, FUN=function(x) which(x==penicillin$samples)))\n# eloR_full_indexes = unlist(lapply(full_elo$id, FUN=function(x) which(x==penicillin$samples)))\n# \n# \n# # select rows of results where results$`Gene length:` < 900\n# possbily_broken_elo\n# # define identifiers from query\n# results$id = substring(results$Query, 1, as.integer(regexpr(\"_\", results$Query)[1])-1)\n# \n# \n# \n# # find indexes of identifiers in penicillin# \n# eloR_broken_MIC = penicillin$penicillin_G[eloR_broken_indexes]\n# eloR_full_MIC = penicillin$penicillin_G[eloR_full_indexes]\n# \n# cat(\" Median: broken eloR:\", median(eloR_broken_MIC),\"\\n\", \"Median: full eloR: \",  median(eloR_full_MIC))\n```\n\n## KhpB amino acid length and MIC\n\nNext we searched directly for the protein \"KhpB\" in the annotated assemblies and inspected the length of the amino acid sequence. For example, if the amino acid sequence of any was significantly shorter than the typical distribution length, it may suggest a potential correlation with increased MIC.\n\nIn 26 of the annotated assemblies, KhpB was split and the first domain of the KhpB protein was annotated as \"jag\".\n\n```{r include=F}\n# 1. List all faa files\n# 2.\n# grep -hr -A1 --no-group-separator \"TerL\" */*.faa > hellyeah.fasta\nfasta_data <- read.table(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/jag_sequences.fasta\", sep=\"\\n\", header=FALSE, stringsAsFactors=FALSE)\n# create a new variable that separates the header and sequence\nfasta_data$header <- sub(\"^>\", \"\", fasta_data[,1])\nfasta_data$sequence <- fasta_data[,2]\n\n# remove the first column\nfasta_data$V1 <- NULL\n\n# rename the columns\ncolnames(fasta_data) <- c(\"header\", \"sequence\")\nfasta_data$header\nlibrary(seqinr)\n\n```\n\n```{r include=F}\n#   ____________________________________________________________________________\n#   Extract protein sequences and plot the number of amino acids            ####\n#   khp and jag                                                             ####\n\n# source the fasta_protein_list_to_dataframe function\nsource(\"/Users/magnusnygardosnes/Dropbox/Github/Bioinformatic_toolbox/R/fasta_protein_list_to_dataframe.R\")\n\n# extract jag protein structure and sequence information\njag = extract_structure_sequence(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/jag_sequences.fasta\")\n\n# extract khps protein structure and sequence information\nkhpB = extract_structure_sequence(\"/Users/magnusnygardosnes/Desktop/Postdoc/Pneumo/Sequences_of_interest_NMBU/KhP_sequences.fasta\")\n\n# source the match_indexes_data1_data2 function\nsource(\"/Users/magnusnygardosnes/Dropbox/Github/Bioinformatic_toolbox/R/match_indexes_data1_data2.R\")\n\n# match jag identities in penicillin data set and add gene of interest column\npenicillin_jag = penicillin[match(jag$Identity, penicillin$samples),]\npenicillin_jag$gene_of_interest = rep(\"jag\", nrow(penicillin_jag))\n\n# match khpB identities in penicillin data set and add gene of interest column\npenicillin_khpB = penicillin[match(khpB$Identity, penicillin$samples),]\npenicillin_khpB$gene_of_interest = rep(\"khpB\", nrow(penicillin_khpB))\n\n# combine jag and penicillin data sets\njag_full = cbind(jag, penicillin_jag)\n\n# combine khpB and penicillin data sets\nkhpB_full = cbind(khpB, penicillin_khpB)\n\n#Combine both sets\nboth_genes = rbind(khpB_full, jag_full)\nboth_genes$n_amino_acids=as.numeric(both_genes$n_amino_acids)\nboth_genes$penicillin_G=as.numeric(both_genes$penicillin_G)\nstr(both_genes)\n\n\n```\n\n```{r}\n#| label: fig-boxplot\n#| fig-cap:  Distribution of Penicillin G resistance KhpB and jag annotations.\n#|   The x-axis represents the gene of interest and the y-axis represents the resistance level to Penicillin G.\nlibrary(ggplot2)\nlibrary(dplyr)\nggplot(both_genes, aes(x = gene_of_interest, y = penicillin_G)) +\n  geom_boxplot()+theme_light()\n\n```\n\n@fig-boxplot shows that most of the high penicillin resistance levels are in the KhpB annotations. Next we look at the gene length:\n\n```{r include=T}\n#| label: fig-gene_length\n#| fig-cap:  The relationship between the length of the gene in terms of amino acids and the resistance levels to Penicillin G.\n#|   The x-axis represents the length of the gene in terms of amino acids, the y-axis represents the resistance level to Penicillin G. The color of the points indicates if the annotation was KhpB was split to jag or just annotated khpB. \nggplot(both_genes, aes(x = n_amino_acids, y = penicillin_G, color = gene_of_interest)) +\n  geom_point() +\n  ggtitle(\"Gene length versus penicillin levels\") +\n  xlab(\"Gene length (amino acids)\") +\n  ylab(\"Penicillin levels\")+theme_light()\n\n```\n\n@fig-gene_length shows that most of the high penicillin resistance levels are observed for normal length variants of the KhpB protein. Most of the high MIC isolates have 328 amino acids in KhpB.\n\n## Summary\n\nIn this analysis, we studied specific genes of interest identified by our colleagues at NMBU, focusing on the protein KhpB and its correlation with pbp2b, a protein known to play a role in increasing Minimum Inhibitory Concentration (MIC). We set up a BLAST database for eloR, extracted matches and the gene length of the match in the respective assemblies, and searched for the protein \"KhpB\" in annotated assemblies to inspect the length of the amino acid sequence. Our results showed that there is no clear relationship between the gene length of KhpB and the observed penicillin MIC, and most of the high MIC levels were observed around the normal gene length. Additionally, we found that most of the high penicillin resistance levels were in the KhpB annotations, with most high MIC isolates having 328 amino acids in KhpB.\n"},"formats":{"html":{"execute":{"fig-width":10,"fig-height":10,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":false,"freeze":false,"echo":false,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"SOI.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"lux","title":"Sequences of interest","date":"2023-01-11","image":"khpB.png","knitr":{"opts_chunk":{"comment":"#>","warning":false,"message":false,"collapse":true,"cache":false}},"toc-location":"left"},"extensions":{"book":{"multiFile":true}}}}}